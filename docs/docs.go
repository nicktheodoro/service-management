// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/budgets": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get all budgets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/budgets.Budget"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "create a new Budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "parameters": [
                    {
                        "description": "Budget Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/budgets.Budget"
                        }
                    }
                }
            }
        },
        "/budgets/{id}": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get Budget by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Budget ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/budgets.Budget"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "update an existing budget by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Budget ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Budget Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/budgets.Budget"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "delete an existing Budget by ID",
                "tags": [
                    "budgets"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Budget ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/budgets/{id}/items": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get all budget items",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets_items"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/budgets.BudgetItem"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "create a new budget item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets_items"
                ],
                "parameters": [
                    {
                        "description": "Budget Item Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetItemInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/budgets.BudgetItem"
                        }
                    }
                }
            }
        },
        "/budgets/{id}/items/{itemId}": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get Budget Item by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets_items"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Budget Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/budgets.BudgetItem"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "update an existing budget item by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets_items"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Budget ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Budget Item Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.BudgetItemInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/budgets.BudgetItem"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "delete an existing budget item by ID",
                "tags": [
                    "budgets_items"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Budget Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get all customers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customers.Customer"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "create a new Customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "parameters": [
                    {
                        "description": "Customer Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CustomerInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/customers.Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get Customer by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customers.Customer"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "update an existing customer by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CustomerInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customers.Customer"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "delete an existing Customer by ID",
                "tags": [
                    "customers"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/customers/{id}/addresses": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get all customer addresses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers_addresses"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customers.CustomerAddress"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "create a new customer address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers_addresses"
                ],
                "parameters": [
                    {
                        "description": "Customer Address Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CustomerAddressInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/customers.CustomerAddress"
                        }
                    }
                }
            }
        },
        "/customers/{id}/addresses/{addressId}": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get Customer Address by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers_addresses"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customers.CustomerAddress"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "update an existing customer address by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers_addresses"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer Address Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CustomerAddressInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customers.CustomerAddress"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "delete an existing customer address by ID",
                "tags": [
                    "customers_addresses"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "authenticate user and generate access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "parameters": [
                    {
                        "description": "Login Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/providers": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get all providers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "providers"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/providers.Provider"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "create a new Provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "providers"
                ],
                "parameters": [
                    {
                        "description": "Provider Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ProviderInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/providers.Provider"
                        }
                    }
                }
            }
        },
        "/providers/{id}": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get Provider by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "providers"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/providers.Provider"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "update an existing provider by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "providers"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Provider Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ProviderInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/providers.Provider"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "delete an existing Provider by ID",
                "tags": [
                    "providers"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/services": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get all services",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.Service"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "create a new service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "parameters": [
                    {
                        "description": "Service Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ServiceInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/services.Service"
                        }
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get Service by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.Service"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "update an existing service by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ServiceInput",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ServiceInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.Service"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "delete an existing service by ID",
                "tags": [
                    "services"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/user-roles": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get all user roles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_roles"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/users.UserRole"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "create a new user role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_roles"
                ],
                "parameters": [
                    {
                        "description": "User Role Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UserRoleInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/users.UserRole"
                        }
                    }
                }
            }
        },
        "/user-roles/{id}": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get user role by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_roles"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UserRole"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "update an existing user role by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_roles"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Role Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UserRoleInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UserRole"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "delete an existing user role by ID",
                "tags": [
                    "user_roles"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/users.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "description": "User Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UserInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/users.User"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "get User by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.User"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "update an existing user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.User"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization Token": []
                    }
                ],
                "description": "delete an existing user by ID",
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "budgets.Budget": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "surcharge": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "budgets.BudgetItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "provider_id": {
                    "type": "integer"
                },
                "service": {
                    "$ref": "#/definitions/services.Service"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "controllers.BudgetInput": {
            "type": "object",
            "required": [
                "customer_id",
                "description",
                "status"
            ],
            "properties": {
                "customer_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/budgets.BudgetItem"
                    }
                },
                "note": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "surcharge": {
                    "type": "integer"
                }
            }
        },
        "controllers.BudgetItemInput": {
            "type": "object",
            "required": [
                "provider_id",
                "service_id"
            ],
            "properties": {
                "note": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "integer"
                },
                "service_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.CustomerAddressInput": {
            "type": "object",
            "required": [
                "city",
                "district",
                "number",
                "state",
                "street",
                "zip_code"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "controllers.CustomerInput": {
            "type": "object",
            "required": [
                "document",
                "email",
                "name",
                "phone"
            ],
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/customers.CustomerAddress"
                    }
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "controllers.LoginInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controllers.ProviderInput": {
            "type": "object",
            "required": [
                "document",
                "email",
                "name",
                "phone"
            ],
            "properties": {
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "controllers.ServiceInput": {
            "type": "object",
            "required": [
                "description",
                "value"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "controllers.UserInput": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password",
                "role_id"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.UserRoleInput": {
            "type": "object",
            "required": [
                "role_name"
            ],
            "properties": {
                "role_name": {
                    "type": "string"
                }
            }
        },
        "customers.Customer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "customers.CustomerAddress": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "number": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "providers.Provider": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "services.Service": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "users.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastname": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/users.UserRole"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "users.UserRole": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "",
	Description:      "API REST in Golang with Gin Framework",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
